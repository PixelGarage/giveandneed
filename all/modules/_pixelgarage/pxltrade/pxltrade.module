<?php
/**
* @file
* A description of what your module does.
*/

define('PXLTRADE_MENU_PATH', 'admin/pxltrade');


require_once 'includes/webform.inc';  // specific webform enhancements for trading plattform
require_once 'includes/webform.mail.inc'; // webform mail adaptations
require_once 'includes/proximity.action.inc'; // implements proximity item click action


/* --------------------------------------------------
 * PxlTrade session data
 * --------------------------------------------------*/
/**
 * Session wide data container.
 *
 * @return array Returns the session data array.
 */
function &pxltrade_session_data() {
  if (!isset($_SESSION['pxlTrade'])) {
    $_SESSION['pxlTrade'] = array();
  }
  return $_SESSION['pxlTrade'];
}


/* --------------------------------------------------
 * PxlTrade hook implementation
 * --------------------------------------------------*/

/**
 * Implements hook_init().
 *
 * Redirects all node pages to the defined proximity container.
 */
function pxltrade_init() {
  if (drupal_is_front_page()) return;

  // search for node/%nid routes
  $pattern = '/^node\/\d+$/';
  if (preg_match($pattern, $_GET['q'])) {
    $param = str_replace('/', '-', $_GET['q']);
    drupal_goto('proximity-container-item/0/' . $param);
  }
}

/**
 * Define the pxltrade menu as top node of the admin menu.
 * All administration of the PxlTrade latform is added below this menu.
 * @return mixed
 */
function pxltrade_menu() {
  $items[PXLTRADE_MENU_PATH] = array(
    'title' => 'PixelTrade',
    'description' => 'PxlTrade - a social and ecological trading plattform.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
    'weight' => -7,
  );
  return $items;
}


/**
 * Implements hook_theme_registry_alter().
 */
function pxltrade_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'pxltrade');
  if (isset($theme_registry['select_as_checkboxes'])) {
    $theme_registry['select_as_checkboxes']['includes'][] = $path . '/includes/bef.checkbox.theme';
    $theme_registry['select_as_checkboxes']['function'] = 'theme_filter_as_checkboxes';
  }
}


/**
 * Implements hook_theme().
 */
function pxltrade_theme() {
  return array(
    'pxltrade_bs_carousel' => array(
      'variables' => array(
        'interval' => '10000',
        'pause' => 0,
        'wrap' => 0,
        'keyboard' => 0,
        'indicators' => 1,
        'navigation' => 1,
        'id' => '',
        'items' => array(),
      ),
      'file' => 'templates/pxltrade-bs-carousel.vars.php',
      'template' => 'templates/pxltrade-bs-carousel',
    ),
    'pxltrade_delivery_confirmation' => array(
      'variables' => array(
        'node' => null,
        'sid' => null,
        'status' => 'success',
      ),
      'file' => 'templates/pxltrade-delivery-confirmation.vars.php',
      'template' => 'templates/pxltrade-delivery-confirmation',
    ),
  );
}

/* --------------------------------------------------
 * Preprocess offer address field (hide sensitive data)
 * --------------------------------------------------*/
/**
 * Preprocess address field.
 *
 * The address field contains sensitive information about the supplier.
 * Hide all sensitive information when an offer is displayed.
 */
function pxltrade_preprocess_field(&$vars) {
  $element = $vars['element'];

  if($element['#entity_type'] == 'node' && $element['#bundle'] == 'offer' && $element['#field_name'] == 'field_address') {
    // hide sensitive address information (only name showed)
    foreach ($vars['items'] as $delta => &$item) {
      hide($item['street_block']);
      hide($item['locality_block']);
    }
  }
}


